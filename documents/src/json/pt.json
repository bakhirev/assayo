[
    {
        "warning": "[Documentação básica](https://github.com/bakhirev/assayo/blob/main/documents/RU.md) em russo. É uma tradução. Pode conter erros. Se você é um falante nativo, você pode ajudar a melhorar esta tradução. Obrigado!"
    },
    {
        "p": "Cria um relatório HTML com análise das estatísticas de confirmação:"
    },
    {
        "li": [
            "o ritmo do trabalho e o número de horas extras;",
            "áreas de responsabilidade, quantidade de funcionalidades e erros;",
            "estilo de trabalho dos colegas;",
            "taxa de rotatividade de funcionários e composição da equipe;",
            "localização dos desenvolvedores;",
            "cronograma de lançamentos e calendário de férias;",
            "custo das funcionalidades e do projeto como um todo;",
            "locais para refatoração, arquivos excluídos, etc."
        ]
    },
    {
        "p": "**Links:** [demo](https://bakhirev.github.io/demo/?ref=github&dump=./test.txt), [online version](https://bakhirev.github.io/demo/?ref=github), [docker](https://hub.docker.com/r/bakhirev/assayo), [reddit](https://www.reddit.com/r/ITManagers/comments/1e5k291/the_visualization_and_analysis_of_git_commit/), [habr](https://habr.com/ru/articles/852782/)."
    },
    {
        "p": "**Video:** [english](https://www.youtube.com/watch?v=uMbhrrd25t4), [español](https://www.youtube.com/watch?v=skmctb_2rZ0), [русский](https://www.youtube.com/watch?v=jwCp_-bhrCQ)."
    },
    {
        "h3": "Table of contents"
    },
    {
        "h2": "COMMIT STATISTICS REPORT"
    },
    {
        "h3": "Como combinar os autores?"
    },
    {
        "p": "É necessário criar um arquivo no diretório principal do seu projeto `.mailmap`."
    },
    {
        "p": "Exemplo de conteúdo de arquivo:"
    },
    {
        "pre": [
            "Alex B <alex@mail.uk>",
            "Alex B <alex@mail.uk> <alex@gov.tk>",
            "Alex B <alex@mail.uk> <bakhirev@ya.kz>",
            "Alex B <alex@mail.uk> <man64@yahoo.com>"
        ]
    },
    {
        "p": "Pode ler mais sobre o formato deste arquivo em [aqui](https://git-scm.com/docs/gitmailmap)."
    },
    {
        "h3": "Como exportar dados do git? "
    },
    {
        "h4": "Para visualização online"
    },
    {
        "p": "No diretório raiz do seu projeto executar:"
    },
    {
        "pre": [
            "git --no-pager log --raw --numstat --oneline --all --reverse --date=iso-strict --pretty=format:\"%ad>%aN>%aE>%s\" > log.txt"
        ]
    },
    {
        "h4": "Para ver sem internet"
    },
    {
        "pre": [
            "git --no-pager log --raw --numstat --oneline --all --reverse --date=iso-strict --pretty=format:\"%ad>%aN>%aE>%s\" | sed -e 's/\\\\/\\\\\\\\/g' | sed -e 's/`/\"/g' | sed -e 's/\\$/S/g' | sed -e '1s/^/R(f\\`/' | sed -e '$s/$/\\`\\);/' > log.txt"
        ]
    },
    {
        "p": "Git criar um ficheiro `log.txt`. Esse arquivo contém dados para construção de relatórios. A diferença entre os formatos está na existência de uma envoltória para as linhas. O formato sem internet será puxado como `js` o arquivo se você o abriu simplesmente `/build/index.html`"
    },
    {
        "h4": "If you use PowerShell in Windows"
    },
    {
        "p": "By default, the output encoding may not match UTF-8 and the resulting log file will be unreadable. Before saving the log, you can change the encoding with the command."
    },
    {
        "pre": "[Console]::OutputEncoding = [System.Text.Encoding]::UTF8"
    },
    {
        "p": "Or open a saved file and manually change the encoding to UTF-8."
    },
    {
        "h3": "Como ver o relatório?"
    },
    {
        "h4": "Using website"
    },
    {
        "li": [
            "Ir para [site](https://bakhirev.github.io/)",
            "Pressione o botão “[Demonstração](https://bakhirev.github.io/demo?lang=ru)”",
            "Arrastar e largar `log.txt` na janela do navegador"
        ]
    },
    {
        "h4": "Use the library NodeJS"
    },
    {
        "li": [
            "run `npx assayo`",
            "open `./assayo/index.html`"
        ]
    },
    {
        "h4": "Use the library PHP"
    },
    {
        "li": [
            "run `composer require bakhirev/assayo`",
            "run `vendor/bin/assayo`",
            "open `./assayo/index.html`"
        ]
    },
    {
        "h4": "Use the library Python"
    },
    {
        "li": [
            "run `pipx install assayo`",
            "run `assayo`",
            "open `./assayo/index.html`"
        ]
    },
    {
        "h4": "Use the library Ruby"
    },
    {
        "li": [
            "run `gem install assayo`",
            "run `assayo`",
            "open `./assayo/index.html`"
        ]
    },
    {
        "h4": "Use the library Go"
    },
    {
        "li": [
            "run `go get github.com/bakhirev/assayo`",
            "run `go install github.com/bakhirev/assayo`",
            "run `assayo`",
            "open `./assayo/index.html`"
        ]
    },
    {
        "h4": "Use source code"
    },
    {
        "li": [
            "Baixar este repositório",
            "Arraste o arquivo `log.txt` para a pasta `/build`",
            "Lançar `/build/index.html`",
            "Ou arraste a pasta `/build` ir para o repositório (o lugar onde se encontra `log.txt`). Você pode mudar o nome. Por exemplo, do nome `/build` no título `/report`"
        ]
    },
    {
        "p": "É importante que o arquivo `log.txt` foi criado por uma equipe para navegar sem internet."
    },
    {
        "h3": "Como recompilar o arquivo do relatório?"
    },
    {
        "li": [
            "Baixar este repositório",
            "Executar `npm install`",
            "Executar `npm run build:local`",
            "A compilação mais recente estará na pasta `/build`"
        ]
    },
    {
        "h3": "Como visualizar o relatório do grupo de microserviços?"
    },
    {
        "li": [
            "Gerar um arquivo para cada microserviço `log.txt` (`log-1.txt`, `log-2.txt`, `log-3.txt` etc.)",
            "Veja “Como visualizar o relatório com a internet?”. No último passo, arraste todos os arquivos para a janela do navegador.",
            "Veja “Como visualizar o relatório sem a internet?”. No segundo passo, arraste todos os microserviços (`log-1.txt`, `log-2.txt`, `log-3.txt` etc.) na pasta relatório (`/build`)."
        ]
    },
    {
        "h3": "Como alterar as cores da interface para as cores da sua marca?"
    },
    {
        "p": "Você pode escrever seu próprio tema de interface. Pode mudar:"
    },
    {
        "li": [
            "**Cabeçalho**. Você pode especificar em um parâmetro da URL ```title```. Por exemplo: ```?title=You Company```",
            "**Themes**. Para fazer isso, você precisa preparar um arquivo CSS e especificar o seu endereço no parâmetro da URL ```theme```. Por exemplo: ```?theme=//company.com/some.css```. Você pode usar os nomes das classes como seletores. A maioria deles não muda na saída de uma nova versão.",
            "**Idioma**. Você pode incluir em um parâmetro de URL. ```lang```. Por exemplo: ```?lang=es```"
        ]
    },
    {
        "p": "**Example:** [demo](https://bakhirev.github.io/demo/themes/)"
    },
    {
        "h3": "Como faço para assinar commits?"
    },
    {
        "p": "Siga a prática [Conventional Commits 1.0.0](https://www.conventionalcommits.org/en/v1.0.0/). Por exemplo:"
    },
    {
        "pre": [
            "JIRA-1234 feat(profile): Added avatar for user "
        ]
    },
    {
        "li": [
            "número da tarefa `(JIRA-1234)`",
            "tipo de trabalho `(feat, fix, style, refactor, test, doc etc.)`",
            "área de trabalho `(profile - Página)`",
            "descrição do trabalho `(Added avatar for user)`"
        ]
    },
    {
        "h3": "How to add checking for commit message?"
    },
    {
        "h4": " Use file `commit-msg`"
    },
    {
        "p": "1. Create file `commit-msg` in folder `.git/hooks/`"
    },
    {
        "p": "2. Add this text in file:"
    },
    {
        "pre": [
            "#!/usr/bin/env bash",
            "if ! grep -iqE \"(JIRA-[0-9]{1,5})(\\s)(feat|fix|docs|style|refactor|test|chore)((\\([a-z0-9_-]{1,}\\)){0,})(:\\s)([a-z]{1,})\" \"$1\"; then",
            "   echo \"Need commit message like: JIRA-12 fix(profile): some text. Read Semantic Commit Messages\" >&2",
            "   exit 1",
            "fi"
        ]
    },
    {
        "h4": " Use package [pre-commit](https://www.npmjs.com/package/pre-commit)"
    },
    {
        "p": "1. Add in file `package.json` property `commit-msg`:"
    },
    {
        "pre": [
            "  ...",
            "  \"commit-msg\": {",
            "    \"regex\": \"(JIRA-[0-9]{1,5})(\\\\s)(feat|fix|docs|style|refactor|test|chore)((\\\\([a-z0-9_-]{1,}\\\\)){0,})(:\\\\s)([a-z]{1,})\",",
            "    \"error-message\": \"Need commit message like: JIRA-12 fix(profile): some text Read Semantic Commit Messages\"",
            "  },",
            "  ..."
        ]
    },
    {
        "p": "2. Run command `npm install pre-commit`"
    },
    {
        "h3": "Como automatizar a coleta de dados?"
    },
    {
        "h4": "With backend"
    },
    {
        "li": [
            "use module [Assayo Crawler](https://github.com/bakhirev/assayo-crawler);"
        ]
    },
    {
        "h4": "Sem backend"
    },
    {
        "li": [
            "criar um clone do seu repositório;",
            "copie a pasta `build` do repositório atual;",
            "abrir `build/index.html` no navegador e adicionar aos favoritos;",
            "adicionar um shortcut na `build/assets/ci-cd.sh` na pasta de inicialização (Windows);"
        ]
    },
    {
        "p": "A cada reinício do computador, o script atualiza a estatística com todos os dados que sejam automaticamente incorporados na branch principal."
    },
    {
        "h3": "DevOps (CI/CD)"
    },
    {
        "h4": "Github Actions"
    },
    {
        "p": "Add [script](https://github.com/bakhirev/assayo/blob/main/documents/ActionExample.yml) in folder `.github/workflows/` or use this [action](https://github.com/marketplace/actions/assayo) from the marketplace."
    },
    {
        "h4": "Servidor Público"
    },
    {
        "p": "Você pode disponibilizar o arquivo com os dados para construção do relatório em um URL público. Para visualizá-lo, você pode usar um site [assayo](https://bakhirev.github.io/). Especifique o endereço onde os dados estão localizados no parâmetro de URL ```dump```:"
    },
    {
        "pre": [
            "https://bakhirev.github.io/demo/?dump=//you_site.com/some/log.txt"
        ]
    },
    {
        "h4": "Servidor Privado"
    },
    {
        "li": [
            "baixar [docker imagem](https://hub.docker.com/r/bakhirev/assayo);",
            "execute-o na rede local;",
            "Para visualizar os relatórios, utilize a interface web, indicando-lhe o endereço em que os dados se encontram localizados através do parâmetro URL ```dump```:"
        ]
    },
    {
        "pre": [
            "http://assayo_url/?dump=//you_url/some/log.txt",
            "assayo_url - O URL do endereço do container Assay, ele está escutando na porta 80;",
            "you_url    - O URL do seu container com os logs do git;"
        ]
    },
    {
        "p": "Por padrão, a imagem será iniciada no endereço ```http://127.0.0.1:80/```. Se você não conseguiu, verifique se a porta 80 está disponível no seu computador."
    },
    {
        "h3": "️ About application"
    },
    {
        "h4": "Architecture"
    },
    {
        "img": "<img src=\"https://raw.githubusercontent.com/bakhirev/assayo-crawler/12af4410fc93384cafb108a4429e43f9a874dbaa/schema.svg\" width=\"70%\" />"
    },
    {
        "p": "1. [Reports showcase UI](https://github.com/bakhirev/assayo-showcase) displays a list of available reports. Each report consists of a title, description, and a list of repositories."
    },
    {
        "p": "2. [Crawler service](https://github.com/bakhirev/assayo-crawler) collects repository logs for the report."
    },
    {
        "p": "3. [Log visualization UI](https://github.com/bakhirev/assayo) **(you here)** displays report. Needs a log file for work."
    },
    {
        "h4": "Liberações, aproximadamente, uma vez por semestre. O que vem a seguir:"
    },
    {
        "p": "Vide [documentação básica](https://github.com/bakhirev/assayo/blob/main/documents/RU.md)"
    },
    {
        "h4": "Como adicionar ou editar uma tradução?"
    },
    {
        "p": "Você pode adicionar uma nova tradução ou corrigir uma existente na seção ```ts/translations/```."
    },
    {
        "p": "[Instrução](https://github.com/firstcontributions/first-contributions)"
    },
    {
        "h4": "Sugestões, sugestões, comentários"
    },
    {
        "li": [
            "telegramm [@bakhirev](https://t.me/bakhirev) (método de comunicação prioritário)",
            "[alexey-bakhirev@yandex.ru](mailto:alexey-bakhirev@yandex.ru)",
            "site [https://bakhirev.github.io/](https://bakhirev.github.io/?ref=github&lang=pt)"
        ]
    }
]
